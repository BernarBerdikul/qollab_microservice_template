"""add_app_tables

Revision ID: f3bb62404e27
Revises:
Create Date: 2023-01-08 15:18:52.061678

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "f3bb62404e27"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "menu",
        sa.Column(
            "title",
            sqlmodel.sql.sqltypes.AutoString(
                length=30,
            ),
            nullable=False,
        ),
        sa.Column(
            "description",
            sqlmodel.sql.sqltypes.AutoString(
                length=255,
            ),
            nullable=False,
        ),
        sa.Column(
            "id",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text(
                "current_timestamp(0)",
            ),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text(
                "current_timestamp(0)",
            ),
            nullable=False,
        ),
        sa.Column("is_removed", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_menu_id"), "menu", ["id"], unique=True)
    op.create_table(
        "submenu",
        sa.Column(
            "title",
            sqlmodel.sql.sqltypes.AutoString(
                length=30,
            ),
            nullable=False,
        ),
        sa.Column(
            "description",
            sqlmodel.sql.sqltypes.AutoString(
                length=255,
            ),
            nullable=False,
        ),
        sa.Column(
            "id",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text(
                "current_timestamp(0)",
            ),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text(
                "current_timestamp(0)",
            ),
            nullable=False,
        ),
        sa.Column("is_removed", sa.Boolean(), nullable=False),
        sa.Column("parent_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["menu.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_submenu_id"), "submenu", ["id"], unique=True)
    op.create_table(
        "dish",
        sa.Column(
            "title",
            sqlmodel.sql.sqltypes.AutoString(
                length=30,
            ),
            nullable=False,
        ),
        sa.Column(
            "description",
            sqlmodel.sql.sqltypes.AutoString(
                length=255,
            ),
            nullable=False,
        ),
        sa.Column("price", sa.Numeric(precision=8, scale=2), nullable=False),
        sa.Column(
            "id",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text(
                "current_timestamp(0)",
            ),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text(
                "current_timestamp(0)",
            ),
            nullable=False,
        ),
        sa.Column("is_removed", sa.Boolean(), nullable=False),
        sa.Column("menu_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("submenu_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(["menu_id"], ["menu.id"]),
        sa.ForeignKeyConstraint(["submenu_id"], ["submenu.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_dish_id"), "dish", ["id"], unique=True)
    op.create_index(op.f("ix_dish_menu_id"), "dish", ["menu_id"], unique=False)
    op.create_index(
        op.f("ix_dish_submenu_id"),
        "dish",
        ["submenu_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_dish_submenu_id"), table_name="dish")
    op.drop_index(op.f("ix_dish_menu_id"), table_name="dish")
    op.drop_index(op.f("ix_dish_id"), table_name="dish")
    op.drop_table("dish")
    op.drop_index(op.f("ix_submenu_id"), table_name="submenu")
    op.drop_table("submenu")
    op.drop_index(op.f("ix_menu_id"), table_name="menu")
    op.drop_table("menu")
    # ### end Alembic commands ###
